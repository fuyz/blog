<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title><%= title %></title>
    <meta name="viewport" content="width=device-width,minimum-scale=1.0,maximum-scale=1.0,user-scalable=no">
    <!-- 引入样式 -->
    <% include ./include/header-res.ejs %>
    <link rel="stylesheet" href="/css/login.css">
    <style>
        #bg-canvas {
            position: relative;
        }
        #bg-canvas canvas {
            position: absolute;
            top: 0;
            /*z-index: -1;*/
            width: 100%;
            height: 100%;
        }
    </style>

</head>
<body>
<div class="login_main">
    <div class="login_L">

    </div>
    <div class="login_R">
        <div class="wrapper">
            <div class="item">
                <h2 class="text-center text-primary">登录</h2>
                <form class="form">
                    <div class="form-group">
                        <label class="text-muted" for="exampleInputEmail1">用户名：</label>
                        <input type="text" class="form-control" id="l-user" placeholder="请输入用户名">
                    </div>
                    <div class="form-group">
                        <label class="text-muted" for="exampleInputPassword1">密码：</label>
                        <input type="password" class="form-control" id="l-p" placeholder="请输入密码">
                    </div>
                    <div class="checkbox">
                        <label class="text-white"><input type="checkbox">记住密码</label>
                        <label class="toRegister"><a>注册</a></label>
                    </div>
                    <input class="center-block submitBtn loginBtn " type="button" value="登录">
                    <!--<button type="submit" class="btn btn-default">Submit</button>-->
                </form>
            </div>
            <div class="item">
                <h2 class="text-center text-primary">注册</h2>
                <form class="form">
                    <div class="form-group">
                        <label class="text-muted" for="exampleInputEmail1">用户名：</label>
                        <input type="email" class="form-control" id="r-user" placeholder="请输入用户名">
                    </div>
                    <div class="form-group">
                        <label class="text-muted" for="exampleInputPassword2">密码：</label>
                        <input type="password" class="form-control" id="r-p1" placeholder="请输入密码">
                    </div>
                    <div class="form-group">
                        <label class="text-muted" for="exampleInputPassword3">确认密码：</label>
                        <input type="password" class="form-control" id="r-p2" placeholder="请输入密码">
                    </div>
                    <div class="checkbox">
                        <label class="text-white">
                            <input type="checkbox"> 记住密码
                        </label>
                        <label class="toLogin"><a>登录</a></label>
                    </div>
                    <input class="center-block submitBtn registerBtn " type="button" value="注册">
                    <!--<button type="submit" class="btn btn-default">Submit</button>-->
                </form>
            </div>
        </div>
    </div>
</div>

<% include ./include/footer-res.ejs %>
<script src="/lib/pixi.min.js" ></script>
<script src="/js/login.js"></script>

<!--canvas-->
<script>
    $(function () {
        const app = new PIXI.Application({
            width: window.innerWidth,
            height: window.innerHeight,
            autoStart: false,
            transparent: true
        });
//    getElementById('bg-canvas')
        document.body.appendChild(app.view);

        function random(min, max) {
            if (arguments.length < 2) {
                max = min;
                min = 0;
            }
            if (min > max) {
                var hold = max;
                max = min;
                min = hold;
            }
            return Math.floor(Math.random() * (max - min + 1)) + min;
        }

        var createStar = function (centerX, centerY, orbitRadius, maxStars) {
            var radius = random(100, orbitRadius) / 30;
            var timePassed = random(0, maxStars);
            var speed = random(orbitRadius) / 500000;
            var star = new PIXI.Sprite(app.loader.resources['star'].texture);
            star.anchor.set(0.5);
            star.width = radius;
            star.height = radius;
            star.alpha = random(2, 10) / 10;
            app.stage.addChild(star);
            app.ticker.add(function () {
                star.x = Math.cos(timePassed + 1) * orbitRadius + centerX;
                star.y = Math.sin(timePassed) * orbitRadius / 2 + centerY;
                timePassed += speed;
                var twinkle = random(10);
                if (twinkle === 1 && star.alpha > 0) {
                    star.alpha -= 0.2;
                } else if (twinkle === 2 && star.alpha < 1) {
                    star.alpha += 0.2;
                }
            });
            return star;
        };

        var starRun = function () {
            var stars = [];
            var maxStars = 1200;
            var starCenterX = app.renderer.width / 2;
            var starCenterY = app.renderer.height / 2;
            for (var i = 0; i < maxStars; i++) {
                stars.push(createStar(starCenterX, starCenterY, random(starCenterX - 10), maxStars));
            }
        };
        var starRun2 = function () {
            var stars = [];
            var maxStars = 200;
            var starCenterX = app.renderer.width / 2;
            var starCenterY = app.renderer.height / 2;
            var radiusMax = starCenterX - 10;
            for (var i = 0; i < maxStars; i++) {
                stars[i] = createStar(starCenterX, starCenterY, radiusMax, maxStars);
            }

            for (var j = 0; j < maxStars; j++) {
                stars[j] = createStar(starCenterX - 10, starCenterY - 10, radiusMax / 10 * 7, maxStars);
            }

            for (var k = 0; k < maxStars; k++) {
                stars[k] = createStar(starCenterX - 30, starCenterY - 30, radiusMax / 10 * 3, maxStars);
            }
        };

        function onAssetsLoaded(loader, res) {
            console.log('All files loaded');
            starRun();
            // starRun2();
            app.start();
        }

        app.loader
            .add('star', '/images/star.png')
            .load(onAssetsLoaded);


    })
</script>

</body>
</html>